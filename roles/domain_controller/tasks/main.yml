---
- name: Check if the host is a Domain Controller
  ansible.windows.win_powershell:
    script: |
      Get-ADDomainController -Identity "{{ domain.controller.ip_address }}"
  register: get_domain_controller

- debug: var=get_domain_controller

#- debug:
#    msg: "{{ get_domain_controller.error[0].category_info.activity}} [FAILURE]: {{ get_domain_controller.error[0].category_info.reason }}"
#  when: get_domain_controller.error[0].category_info.reason == "ADServerDownException"
#
#- name: Create a new domain
#  ansible.windows.win_domain:
#    dns_domain_name: "{{ domain.name }}"
#    domain_netbios_name: "{{ domain.controller.netbios }}"
#    domain_mode: "{{ domain.mode }}"
#    forest_mode: "{{ domain.forest_mode }}"
#    database_path: "{{ domain.controller.ntds_path }}"
#    sysvol_path: "{{ domain.controller.sysvol_path }}"
#    safe_mode_password: "{{ domain.controller.dsrm_pass }}"
#    create_dns_delegation: "{{ domain.create_dns_delegation }}"
#  register: create_domain
#  when: get_domain_controller.error[0].category_info.reason == "ADServerDownException"
#
#- name: Reboot the Domain Controller
#  ansible.windows.win_reboot:
#    reboot_timeout: 300
#  when: create_domain.reboot_required
#
#- name: Ensure the host is a Domain Controller
#  ansible.windows.win_domain_controller:
#    dns_domain_name: "{{ domain.name }}"
#    domain_admin_user: "{{ domain.admin.user }}@{{ domain.name }}"
#    domain_admin_password: "{{ domain.admin.pass }}"
#    safe_mode_password: "{{ domain.controller.dsrm_pass }}"
#    state: domain_controller
